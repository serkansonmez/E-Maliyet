USE TIGER_FERCAM
GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE DP_RAPOR_CARIHESAPFATURATAHSILATGUNRAPORU @DB NVARCHAR(50), @FIRM NVARCHAR(3), @DONEM NVARCHAR(2) ,
                                      @_RAPTAR_VALUE DATETIME
 
AS
BEGIN
     DECLARE @QUERY NVARCHAR(MAX)
     DECLARE @QUERY1 NVARCHAR(MAX)
     DECLARE @QUERY2 NVARCHAR(MAX)
     DECLARE @QUERY3 NVARCHAR(MAX)
     DECLARE @QUERY4 NVARCHAR(MAX)
     DECLARE @QUERY5 NVARCHAR(MAX)
     DECLARE @QUERY6 NVARCHAR(MAX)
     DECLARE @QUERY7 NVARCHAR(MAX)
     DECLARE @QUERY8 NVARCHAR(MAX)
     DECLARE @QUERY9 NVARCHAR(MAX)
     DECLARE @QUERY10 NVARCHAR(MAX)
     DECLARE @QUERY11 NVARCHAR(MAX)
     DECLARE @QUERY12 NVARCHAR(MAX)
     DECLARE @QUERY13 NVARCHAR(MAX)
     DECLARE @QUERY14 NVARCHAR(MAX)
     DECLARE @QUERY15 NVARCHAR(MAX)
     DECLARE @QUERY16 NVARCHAR(MAX)
     DECLARE @QUERY17 NVARCHAR(MAX)
     DECLARE @QUERY18 NVARCHAR(MAX)
     DECLARE @QUERY19 NVARCHAR(MAX)
     DECLARE @QUERY20 NVARCHAR(MAX)

     DECLARE @PARAMETRELER NVARCHAR(MAX)

     SET @PARAMETRELER = N'@_RAPTAR DATETIME';

     SET @QUERY1 = ''
     SET @QUERY2 = ''
     SET @QUERY3 = ''
     SET @QUERY4 = ''
     SET @QUERY5 = ''
     SET @QUERY6 = ''
     SET @QUERY7 = ''
     SET @QUERY8 = ''
     SET @QUERY9 = ''
     SET @QUERY10 = ''
     SET @QUERY11 = ''
     SET @QUERY12 = ''
     SET @QUERY13 = ''
     SET @QUERY14 = ''
     SET @QUERY15 = ''
     SET @QUERY16 = ''
     SET @QUERY17 = ''
     SET @QUERY18 = ''
     SET @QUERY19 = ''
     SET @QUERY20 = ''

     SET @QUERY1 = SUBSTRING('DECLARE @TARIH_1 DATE
DECLARE @TARIH_2 DATE
DECLARE @CLIENTREF integer
DECLARE @B_PAYPLANREF integer
DECLARE @B_VADE_TARIHI DATE
DECLARE @B_GIRIS_TARIHI DATE
DECLARE @B_ISLEM_TIPI varchar(55)
DECLARE @B_TUTAR AS FLOAT
DECLARE @K_PAYPLANREF AS integer Declare @K_VADE_TARIHI as date Declare @K_GIRIS_TARIHI as date Declare @K_ISLEM_TIPI as varchar(50) Declare @K_ISLEM_TUTAR as float
DECLARE @B_LOGICALREF integer declare @B_CARDREF AS integer DECLARE @B_DATE DATE DECLARE @B_PROCDATE DATE DECLARE @B_TRCODE integer declare @B_TOTAL float
DECLARE @A_LOGICALREF integer declare @A_CARDREF AS integer DECLARE @A_DATE DATE DECLARE @A_PROCDATE DATE DECLARE @A_TRCODE integer declare @A_TOTAL float
DECLARE @B_KALAN AS FLOAT DECLARE @A_KALAN AS FLOAT DECLARE @B_KAPANAN AS FLOAT
DECLARE @TABLO_SAY AS FLOAT
-- DY Paytrans Tablosu Oluşturuluyor
SET @TABLO_SAY = (SELECT COUNT(id) FROM {DATABASE}..sysobjects WHERE  NAME LIKE ''DY_PAYTRANS'')
IF @TABLO_SAY > 0 
	BEGIN
		DROP TABLE {DATABASE}..DY_PAYTRANS
	END
	SELECT * INTO  {DATABASE}..DY_PAYTRANS 
	FROM (
	SELECT 
	ISNULL(PAYTRANS.LOGICALREF + 900000000,CLFLINE.LOGICALREF + 800000000) LOGICALREF,
	ISNULL(PAYTRANS.CARDREF,CLFLINE.CLIENTREF) CARDREF,
	ISNULL(PAYTRANS.DATE_,CLFLINE.DATE_) DATE_,
	ISNULL(CLFLINE.FTIME,0) FTIME,
	ISNULL(PAYTRANS.PROCDATE,CLFLINE.DATE_) PROCDATE,
	ISNULL(PAYTRANS.TRCODE,CLFLINE.TRCODE)  TRCODE,
	ROUND(ISNULL(CASE WHEN PAYTRANS.TRCURR IN (0,160) THEN PAYTRANS.TOTAL ELSE PAYTRANS.TOTAL * PAYTRANS.TRRATE END,CLFLINE.AMOUNT),2) TOTAL,
	ISNULL(PAYTRANS.FICHEREF,CLFLINE.SOURCEFREF ) FICHEREF,
	ISNULL(PAYTRANS.SIGN,CLFLINE.SIGN) SIGN,
	ISNULL(PAYTRANS.PAIDINCASH,0) PAIDINCASH,
	ISNULL(PAYTRANS.CLOSINGRATE,0) CLOSINGRATE,
	ISNULL(PAYTRANS.CANCELLED,CLFLINE.CANCELLED) CANCELLED
	FROM {DATABASE}..LG_{FIRMA}_{DONEM}_CLFLINE CLFLINE
		LEFT JOIN {DATABASE}..LG_{FIRMA}_{DONEM}_INVOICE	INVOICE  ON CLFLINE.SOURCEFREF = INVOICE.LOGICALREF AND CLFLINE.MODULENR = 4
		LEFT JOIN {DATABASE}..LG_{FIRMA}_{DONEM}_PAYTRANS	PAYTRANS ON CLFLINE.MODULENR = PAYTRANS.MODULENR    AND ((CLFLINE.TRCODE = 14 AND  CLFLINE.LOGICALREF  = PAYTRANS.FICHEREF) OR CLFLINE.TRCODE <> 14 AND  CLFLINE.SOURCEFREF = PAYTRANS.FICHEREF)
	WHERE   ISNULL(INVOICE.FROMKASA,0) = 0 AND CLFLINE.CANCELLED =0 
		) Paytrans
		  CREATE UNIQUE INDEX [LOGICALREF] ON {DATABASE}..DY_PAYTRANS (LOGICALREF ASC)
		  CREATE INDEX CARDREF ON {DATABASE}..DY_PAYTRANS (CARDREF ASC)

--   DY Borc Takip Tablosunun Oluşturulmasİ
SET @TABLO_SAY = (SELECT COUNT(id) FROM {DATABASE}..sysobjects WHERE  NAME LIKE ''DY_BorcTakip'')
IF @TABLO_SAY > 0 
	BEGIN
		DROP TABLE {DATABASE}..DY_BorcTakip
	END
	CREATE TABLE {DATABASE}..[DY_BorcTakip](
		[LOGICALREF] [int] IDENTITY(1,1) NOT NULL,
		[CLIENTREF] [int] NULL,
		[B_PAYPLANREF] [int] NULL,
		[B_VADE_TARIHI] [date] NULL,
		[B_GIRIS_TARIHI] [date] NULL,
		[B_ISLEM_TIPI] [nvarchar](50) NULL,
		[B_TUTAR] [float] NULL,
		[K_PAYPLANREF] [int] NULL,
		[K_VADE_TARIHI] [date] NULL,
		[K_GIRIS_TARIHI] [date] NULL,
		[K_ISLEM_TIPI] [nvarchar](50) NULL,
		[K_ISLEM_TUTAR] [float] NULL,
	 CONSTRAINT [PK_DY_BorcTakip] PRIMARY KEY CLUSTERED 
	(
		[LOGICALREF] ASC
	)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
	) ON [PRIMARY]



------DY_PAYTRANS_TUR TABLOSU OLUŞTURULUYOR

SET @TABLO_SAY = (SELECT COUNT(id) FROM {DATABASE}..sysobjects WHERE  NAME LIKE ''DY_PAYTRANS_TUR'')
IF @TABLO_SAY =0
	BEGIN

CREATE TABLE [dbo].[DY_PAYTRANS_TUR](
	[LOGICALREF] [int] NOT NULL,
	[MODULENR] [int] NOT NULL,
	[TRCODE]  [int] NOT NULL,
	[ACIKLAMA] [nvarchar](50) NULL,
 CONSTRAINT [PK_DY_PAYTRANS_TUR] PRIMARY KEY CLUSTERED 
(
	[LOGICALREF] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY]

INSERT INTO DY_PAYTRANS_TUR(LOGICALREF,MODULENR,TRCODE,ACIKLAMA)  VALUES(1,3,1,''Ödemeli Sipariş'')
INSERT INTO DY_PAYTRANS_TUR(LOGICALREF,MODULENR,TRCODE,ACIKLAMA)  VALUES(2,4,1,''Satın Alma Fat.'')
INSERT INTO DY_PAYTRANS_TUR(LOGICALREF,MODULENR,TRCODE,ACIKLAMA)  VALUES(3,4,2,'''')
INSERT INTO DY_PAYTRANS_TUR(LOGICALREF,MODULENR,TRCODE,ACIKLAMA)  VALUES(4,4,3,''Toptan Satış İade'')
INSERT INTO DY_PAYTRANS_TUR(LOGICALREF,MODULENR,TRCODE,ACIKLAMA)  VALUES(5,4,4,''Alınan Hizmet Fat.'')
INSERT INTO DY_PAYTRANS_TUR(LOGICALREF,MODULENR,TRCODE,ACIKLAMA)  VALUES(6,4,5,''Alınan Proforma'')
INSERT INTO DY_PAYTRANS_TUR(LOGICALREF,MODULENR,TRCODE,ACIKLAMA)  VALUES(7,4,6,''Satınalma İade Fat.'')
INSERT INTO DY_PAYTRANS_TUR(LOGICALREF,MODULENR,TRCODE,ACIKLAMA)  VALUES(8,4,7,''Parekende Satış'')
INSERT INTO DY_PAYTRANS_TUR(LOGICALREF,MODULENR,TRCODE,ACIKLAMA)  VALUES(9,4,8,''Toptan Satış'')
INSERT INTO DY_PAYTRANS_TUR(LOGICALREF,MODULENR,TRCODE,ACIKLAMA)  VALUES(10,4,9,''Verilen Hizmet'')
INSERT INTO DY_PAYTRANS_TUR(LOGICALREF,MODULENR,TRCODE,ACIKLAMA)  VALUES(11,4,14,''Fiyat Farkı'')
INSERT INTO DY_PAYTRANS_TUR(LOGICALREF,MODULENR,TRCODE,ACIKLAMA)  VALUES(12,5,1,''Nakit Tahsilat'')
INSERT INTO DY_PAYTRANS_TUR(LOGICALREF,MODULENR,TRCODE,ACIKLAMA)  VALUES(13,5,2,''Nakit Ödeme'')
INSERT INTO DY_PAYTRANS_TUR(LOGICALREF,MODULENR,TRCODE,ACIKLAMA)  VALUES(14,5,3,''Borc Dekontu'')
INSERT INTO DY_PAYTRANS_TUR(LOGICALREF,MODULENR,TRCODE,ACIKLAMA)  VALUES(15,5,4,''Alacak Dekontu'')
INSERT INTO DY_PAYTRANS_TUR(LOGICALREF,MODULENR,TRCODE,ACIKLAMA)  VALUES(16,5,5,''Virman Fişi'')
INSERT INTO DY_PAYTRANS_TUR(LOGICALREF,MODULENR,TRCODE,ACIKLAMA)  VALUES(17,5,6,''Kur Farkı'')
INSERT INTO DY_PAYTRANS_TUR(LOGICALREF,MODULENR,TRCODE,ACIKLAMA)  VALUES(18,5,14,''Açılış Fişi'')
INSERT INTO DY_PAYTRANS_TUR(LOGICALREF,MODULENR,TRCODE,ACIKLAMA)  VALUES(19,5,44,''Alınan Serbest Meslek Mak.'')
INSERT INTO DY_PAYTRANS_TUR(LOGICALREF,MODULENR,TRCODE,ACIKLAMA)  VALUES(20,5,72,''Kredi Kartı'')
INSERT INTO DY_PAYTRANS_TUR(LOGICALREF,MODULENR,TRCODE,ACIKLAMA)  VALUES(21,6,1,''Çek Girişi'')
INSERT INTO DY_PAYTRANS_TUR(LOGICALREF,MODULENR,TRCODE,ACIKLAMA)  VALUES(22,6,2,''Senet Giriş'')
INSERT INTO DY_PAYTRANS_TUR(LOGICALREF,MODULENR,TRCODE,ACIKLAMA)  VALUES(23,6,3,''Çek Çıkış'')
INSERT INTO DY_PAYTRANS_TUR(LOGICALREF,MODULENR,TRCODE,ACIKLAMA)  VALUES(24,7,3,''Gelen Havale'')
INSERT INTO DY_PAYTRANS_TUR(LOGICALREF,MODULENR,TRCODE,ACIKLAMA)  VALUES(25,7,4,''Gönderilen Havale'')
INSERT INTO DY_PAYTRANS_TUR(LOGICALREF,MODULENR,TRCODE,ACIKLAMA)  VALUES(26,10,1,''Kasa Tahsilat'')
INSERT INTO DY_PAYTRANS_TUR(LOGICALREF,MODULENR,TRCODE,ACIKLAMA)  VALUES(27,10,2,''Kasa Ödeme'')
INSERT INTO DY_PAYTRANS_TUR(LOGICALREF,MODULENR,TRCODE,ACIKLAMA)  VALUES(28,61,3,''Çek İadesi'')
INSERT INTO DY_PAYTRANS_TUR(LOGICALREF,MODULENR,TRCODE,ACIKLAMA)  VALUES(29,61,4,''Portföye Çek İadesi'')
END
----------------------------------------------------------
SET @TARIH_1 = ''20000101''
SET @TARIH_2 = @_RAPTAR
DECLARE CariHesap Cursor For

SELECT LOGICALREF  FROM (
SELECT CLFLINE.CLIENTREF  LOGICALREF, SUM(CASE WHEN SIGN = 0 THEN AMOUNT ELSE 0-AMOUNT END) BAKIYE  
FROM {DATABASE}..LG_{FIRMA}_{DONEM}_CLFLINE CLFLINE
	LEFT JOIN {DATABASE}..LG_{FIRMA}_{DONEM}_INVOICE INVOICE ON CLFLINE.SOURCEFREF = INVOICE.LOGICALREF AND CLFLINE.MODULENR = 4
WHERE   ISNULL(INVOICE.FROMKASA,0) = 0 AND CLFLINE.DATE_ BETWEEN @TARIH_1 AND @TARIH_2 AND CLFLINE.CANCELLED =0 --and CLFLINE.CLIENTREF = 2
GROUP BY CLFLINE.CLIENTREF) D WHERE D.BAKIYE >0

OPEN CariHesap
FETCH NEXT FROM CariHesap INTO @CLIENTREF
WHILE @@FETCH_STATUS =0
BEGIN

DECLARE Borc Cursor For
	SELECT LOGICALREF,CARDREF,DATE_,PROCDATE,TRCODE,TOTAL  
	FROM   {DATABASE}..DY_PAYTRANS WHERE CARDREF = @CLIENTREF AND SIGN =0 AND CANCELLED=0 AND PAIDINCASH = 0 AND CLOSINGRATE = 0 AND PROCDATE BETWEEN @TARIH_1 AND @TARIH_2   
	ORDER BY CARDREF,DATE_,FTIME
	
DECLARE Alacak Cursor For
	SELECT LOGICALREF,CARDREF,DATE_,PROCDATE,TRCODE,TOTAL  
	FROM   {DATABASE}..DY_PAYTRANS WHERE CARDREF = @CLIENTREF AND SIGN =1 AND CANCELLED=0 AND PAIDINCASH = 0 AND CLOSINGRATE = 0 AND PROCDATE BETWEEN @TARIH_1 AND @TARIH_2   
	ORDER BY CARDREF,DATE_,FTIME
OPEN Alacak
FETCH NEXT FROM ALACAK INTO @A_LOGICALREF,@A_CARDREF,@A_DATE,@A_PROCDATE,@A_TRCODE,@A_TOTAL
	IF @@FETCH_STATUS = -1  -- Alacak Kaydİ bulunamazsa işlemi boş geçiyor
	BEGIN 
		SET @A_TOTAL = 0
	END 
	OPEN Borc
		FETCH NEXT FROM Borc INTO @B_LOGICALREF,@B_CARDREF,@B_DATE,@B_PROCDATE,@B_TRCODE,@B_TOTAL
			SET @B_KALAN = @B_TOTAL
			SET @A_KALAN = @A_TOTAL 
			WHILE @@FETCH_STATUS =0
				BEGIN   
TEKRAR:
					SET @B_KALAN = @B_KALAN - @A_KALAN 
					IF @B_KALAN > 0 
						BEGIN
							IF @A_KALAN > 0 
								BEGIN
									INSERT INTO {DATABASE}..DY_BorcTakip (CLIENTREF,B_PAYPLANREF,B_VADE_TARIHI,B_GIRIS_TARIHI,B_TUTAR,K_PAYPLANREF,K_VADE_TARIHI,K_GIRIS_TARIHI,K_ISLEM_TUTAR)
									values(@B_CARDREF,@B_LOGICALREF,@B_DATE,@B_PROCDATE,ROUND(@A_KALAN,2),@A_LOGICALREF,@A_DATE,@A_PROCDATE,ROUND(@A_KALAN,2))
								END 
							FETCH NEXT FROM ALACAK INTO @A_LOGICALREF,@A_CARDREF,@A_DATE,@A_PROCDATE,@A_TRCODE,@A_TOTAL
								IF @@FETCH_STATUS = -1  -- Alacak Kaydİ bulunamazsa işlemi boş geçiyor
									BEGIN 
										INSERT INTO {DATABASE}..DY_BorcTakip (CLIENTREF,B_PAYPLANREF,B_VADE_TARIHI,B_GIRIS_TARIHI,B_TUTAR,K_PAYPLANREF,K_VADE_TARIHI,K_GIRIS_TARIHI,K_ISLEM_TUTAR)
										values(@B_CARDREF,@B_LOGICALREF,@B_DATE,@B_PROCDATE,ROUND(@B_KALAN,2),NULL,NULL,NULL,0)
									
										INSERT INTO {DATABASE}..DY_BorcTakip (CLIENTREF,B_PAYPLANREF,B_VADE_TARIHI,B_GIRIS_TARIHI,B_TUTAR,K_PAYPLANREF,K_VADE_TARIHI,K_GIRIS_TARIHI,K_ISLEM_TUTAR)
										SELECT CARDREF,	LOGICALREF,DATE_,PROCDATE ,TOTAL,null ,NULL ,null ,0  FROM {DATABASE}..DY_PAYTRANS WHERE CARDREF = @CLIENTREF AND SIGN = 0 AND CANCELLED =0 AND PAIDINCASH = 0 AND  CLOSINGRATE = 0 AND  PROCDATE BETWEEN @TARIH_1 AND @TARIH_2 AND  LOGICALREF NOT IN (SELECT B_PAYPLANREF  FROM {DATABASE}..DY_BorcTakip WHERE CLIENTREF =  @CLIENTREF)
											
										goto BITIR
										SET @A_KALAN = 0
									END 
								IF @@FETCH_STATUS = 0  -- Alacak Kaydy bulunamazsa i?lemi bo? geçiyor
									BEGIN 
										SET @A_KALAN = @A_TOTAL
									END
							GOTO TEKRAR
						END 
						IF @B_KALAN = 0 OR @B_KALAN < 0
							BEGIN 
								SET @B_KAPANAN = @B_KALAN + @A_KALAN 
								INSERT INTO {DATABASE}..DY_BorcTakip (CLIENTREF,B_PAYPLANREF,B_VADE_TARIHI,B_GIRIS_TARIHI,B_TUTAR,K_PAYPLANREF,K_VADE_TARIHI,K_GIRIS_TARIHI,K_ISLEM_TUTAR)
								values(@B_CARDREF,@B_LOGICALREF,@B_DATE,@B_PROCDATE,ROUND(@B_KAPANAN,2),@A_LOGICALREF,@A_DATE,@A_PROCDATE,ROUND(@B_KAPANAN,2))
								SET @A_KALAN  = @A_KALAN - @B_KAPANAN
								FETCH NEXT FROM Borc INTO @B_LOGICALREF,@B_CARDREF,@B_DATE,@B_PROCDATE,@B_TRCODE,@B_TOTAL
								IF @@FETCH_STATUS = -1  -- Alacak Kaydİ bulunamazsa işlemi boş geçiyor
									BEGIN 
										GOTO BITIR
									END 
								SET @B_KALAN = @B_TOTAL
								GOTO TEKRAR
							END
						END
BITIR:
CLOSE Borc
DEALLOCATE Borc
CLOSE ALACAK
DEALLOCATE ALACAK
FETCH NEXT FROM CariHesap INTO @CLIENTREF
END
CLOSE CariHesap
DEALLOCATE CariHesap

SELECT 
CLCARD.CODE [Cari Hesap Kodu],
CLCARD.DEFINITION_ [Cari Hesap],
CLCARD.SPECODE [Cari Özel Kod],
CLCARD.SPECODE2 [Cari Özel Kod 2],
CLCARD.SPECODE2 [Cari Özel Kod 3],
ISNULL(PYT_1.TRCODE ,CLF_1.TRCODE) [Fiş Tür No],
PYT_TUR_1.ACIKLAMA [Fiş Türü],
B_GIRIS_TARIHI  [İşlem Tarihi],
B_VADE_TARIHI	[Vade Tarihi],
BT.B_TUTAR		[Tutar], 
ISNULL(PYT_2.TRCODE ,CLF_2.TRCODE) [Kapatan Fiş Tür No],
PYT_TUR_2.ACIKLAMA [Kapatan Fiş Türü],


K_GIRIS_TARIHI  [Kapatan İşlem Tarihi],
K_VADE_TARIHI	[Kapatan Vade Tarihi],
CASE WHEN ISNULL(PYT_2.TRCODE ,CLF_2.TRCODE) is null then 0 else BT.B_TUTAR END		[Kapatan Tutar],

CASE WHEN K_VADE_TARIHI IS null THEN DATEDIFF(dd,B_VADE_TARIHI,GETDATE())  ELSE DATEDIFF(dd,B_VADE_TARIHI,K_VADE_TARIHI) END [Gün Fark]


FROM DY_BorcTakip BT
INNER JOIN LG_{FIRMA}_CLCARD CLCARD    ON BT.CLIENTREF = CLCARD.LOGICALREF 
LEFT JOIN LG_{FIRMA}_{DONEM}_PAYTRANS PYT_1 ON BT.B_PAYPLANREF = PYT_1.LOGICALREF +  900000000
LEFT JOIN LG_{FIRMA}_{DONEM}_CLFLINE  CLF_1 ON BT.B_PAYPLANREF = CLF_1.LOGICALREF +  800000000
LEFT JOIN LG_{FIRMA}_{DONEM}_PAYTRANS PYT_2 ON BT.K_PAYPLANREF = PYT_2.LOGICALREF +  900000000
LEFT JOIN LG_{FIRMA}_{DONEM}_CLFLINE  CLF_2 ON BT.K_PAYPLANREF = CLF_2.LOGICALREF +  800000000
LEFT JOIN DY_PAYTRANS_TUR PYT_TUR_1 ON (PYT_1.MODULENR = PYT_TUR_1.MODULENR AND PYT_1.TRCODE = PYT_TUR_1.TRCODE) OR (CLF_1.MODULENR = PYT_TUR_1.MODULENR AND CLF_1.TRCODE = PYT_TUR_1.TRCODE) 
LEFT JOIN DY_PAYTRANS_TUR PYT_TUR_2 ON (PYT_2.MODULENR = PYT_TUR_2.MODULENR AND PYT_2.TRCODE = PYT_TUR_2.TRCODE) OR (CLF_2.MODULENR = PYT_TUR_2.MODULENR AND CLF_2.TRCODE = PYT_TUR_2.TRCODE)


', 1, 4000)
     SET @QUERY2 = SUBSTRING('DECLARE @TARIH_1 DATE
DECLARE @TARIH_2 DATE
DECLARE @CLIENTREF integer
DECLARE @B_PAYPLANREF integer
DECLARE @B_VADE_TARIHI DATE
DECLARE @B_GIRIS_TARIHI DATE
DECLARE @B_ISLEM_TIPI varchar(55)
DECLARE @B_TUTAR AS FLOAT
DECLARE @K_PAYPLANREF AS integer Declare @K_VADE_TARIHI as date Declare @K_GIRIS_TARIHI as date Declare @K_ISLEM_TIPI as varchar(50) Declare @K_ISLEM_TUTAR as float
DECLARE @B_LOGICALREF integer declare @B_CARDREF AS integer DECLARE @B_DATE DATE DECLARE @B_PROCDATE DATE DECLARE @B_TRCODE integer declare @B_TOTAL float
DECLARE @A_LOGICALREF integer declare @A_CARDREF AS integer DECLARE @A_DATE DATE DECLARE @A_PROCDATE DATE DECLARE @A_TRCODE integer declare @A_TOTAL float
DECLARE @B_KALAN AS FLOAT DECLARE @A_KALAN AS FLOAT DECLARE @B_KAPANAN AS FLOAT
DECLARE @TABLO_SAY AS FLOAT
-- DY Paytrans Tablosu Oluşturuluyor
SET @TABLO_SAY = (SELECT COUNT(id) FROM {DATABASE}..sysobjects WHERE  NAME LIKE ''DY_PAYTRANS'')
IF @TABLO_SAY > 0 
	BEGIN
		DROP TABLE {DATABASE}..DY_PAYTRANS
	END
	SELECT * INTO  {DATABASE}..DY_PAYTRANS 
	FROM (
	SELECT 
	ISNULL(PAYTRANS.LOGICALREF + 900000000,CLFLINE.LOGICALREF + 800000000) LOGICALREF,
	ISNULL(PAYTRANS.CARDREF,CLFLINE.CLIENTREF) CARDREF,
	ISNULL(PAYTRANS.DATE_,CLFLINE.DATE_) DATE_,
	ISNULL(CLFLINE.FTIME,0) FTIME,
	ISNULL(PAYTRANS.PROCDATE,CLFLINE.DATE_) PROCDATE,
	ISNULL(PAYTRANS.TRCODE,CLFLINE.TRCODE)  TRCODE,
	ROUND(ISNULL(CASE WHEN PAYTRANS.TRCURR IN (0,160) THEN PAYTRANS.TOTAL ELSE PAYTRANS.TOTAL * PAYTRANS.TRRATE END,CLFLINE.AMOUNT),2) TOTAL,
	ISNULL(PAYTRANS.FICHEREF,CLFLINE.SOURCEFREF ) FICHEREF,
	ISNULL(PAYTRANS.SIGN,CLFLINE.SIGN) SIGN,
	ISNULL(PAYTRANS.PAIDINCASH,0) PAIDINCASH,
	ISNULL(PAYTRANS.CLOSINGRATE,0) CLOSINGRATE,
	ISNULL(PAYTRANS.CANCELLED,CLFLINE.CANCELLED) CANCELLED
	FROM {DATABASE}..LG_{FIRMA}_{DONEM}_CLFLINE CLFLINE
		LEFT JOIN {DATABASE}..LG_{FIRMA}_{DONEM}_INVOICE	INVOICE  ON CLFLINE.SOURCEFREF = INVOICE.LOGICALREF AND CLFLINE.MODULENR = 4
		LEFT JOIN {DATABASE}..LG_{FIRMA}_{DONEM}_PAYTRANS	PAYTRANS ON CLFLINE.MODULENR = PAYTRANS.MODULENR    AND ((CLFLINE.TRCODE = 14 AND  CLFLINE.LOGICALREF  = PAYTRANS.FICHEREF) OR CLFLINE.TRCODE <> 14 AND  CLFLINE.SOURCEFREF = PAYTRANS.FICHEREF)
	WHERE   ISNULL(INVOICE.FROMKASA,0) = 0 AND CLFLINE.CANCELLED =0 
		) Paytrans
		  CREATE UNIQUE INDEX [LOGICALREF] ON {DATABASE}..DY_PAYTRANS (LOGICALREF ASC)
		  CREATE INDEX CARDREF ON {DATABASE}..DY_PAYTRANS (CARDREF ASC)

--   DY Borc Takip Tablosunun Oluşturulmasİ
SET @TABLO_SAY = (SELECT COUNT(id) FROM {DATABASE}..sysobjects WHERE  NAME LIKE ''DY_BorcTakip'')
IF @TABLO_SAY > 0 
	BEGIN
		DROP TABLE {DATABASE}..DY_BorcTakip
	END
	CREATE TABLE {DATABASE}..[DY_BorcTakip](
		[LOGICALREF] [int] IDENTITY(1,1) NOT NULL,
		[CLIENTREF] [int] NULL,
		[B_PAYPLANREF] [int] NULL,
		[B_VADE_TARIHI] [date] NULL,
		[B_GIRIS_TARIHI] [date] NULL,
		[B_ISLEM_TIPI] [nvarchar](50) NULL,
		[B_TUTAR] [float] NULL,
		[K_PAYPLANREF] [int] NULL,
		[K_VADE_TARIHI] [date] NULL,
		[K_GIRIS_TARIHI] [date] NULL,
		[K_ISLEM_TIPI] [nvarchar](50) NULL,
		[K_ISLEM_TUTAR] [float] NULL,
	 CONSTRAINT [PK_DY_BorcTakip] PRIMARY KEY CLUSTERED 
	(
		[LOGICALREF] ASC
	)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
	) ON [PRIMARY]



------DY_PAYTRANS_TUR TABLOSU OLUŞTURULUYOR

SET @TABLO_SAY = (SELECT COUNT(id) FROM {DATABASE}..sysobjects WHERE  NAME LIKE ''DY_PAYTRANS_TUR'')
IF @TABLO_SAY =0
	BEGIN

CREATE TABLE [dbo].[DY_PAYTRANS_TUR](
	[LOGICALREF] [int] NOT NULL,
	[MODULENR] [int] NOT NULL,
	[TRCODE]  [int] NOT NULL,
	[ACIKLAMA] [nvarchar](50) NULL,
 CONSTRAINT [PK_DY_PAYTRANS_TUR] PRIMARY KEY CLUSTERED 
(
	[LOGICALREF] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY]

INSERT INTO DY_PAYTRANS_TUR(LOGICALREF,MODULENR,TRCODE,ACIKLAMA)  VALUES(1,3,1,''Ödemeli Sipariş'')
INSERT INTO DY_PAYTRANS_TUR(LOGICALREF,MODULENR,TRCODE,ACIKLAMA)  VALUES(2,4,1,''Satın Alma Fat.'')
INSERT INTO DY_PAYTRANS_TUR(LOGICALREF,MODULENR,TRCODE,ACIKLAMA)  VALUES(3,4,2,'''')
INSERT INTO DY_PAYTRANS_TUR(LOGICALREF,MODULENR,TRCODE,ACIKLAMA)  VALUES(4,4,3,''Toptan Satış İade'')
INSERT INTO DY_PAYTRANS_TUR(LOGICALREF,MODULENR,TRCODE,ACIKLAMA)  VALUES(5,4,4,''Alınan Hizmet Fat.'')
INSERT INTO DY_PAYTRANS_TUR(LOGICALREF,MODULENR,TRCODE,ACIKLAMA)  VALUES(6,4,5,''Alınan Proforma'')
INSERT INTO DY_PAYTRANS_TUR(LOGICALREF,MODULENR,TRCODE,ACIKLAMA)  VALUES(7,4,6,''Satınalma İade Fat.'')
INSERT INTO DY_PAYTRANS_TUR(LOGICALREF,MODULENR,TRCODE,ACIKLAMA)  VALUES(8,4,7,''Parekende Satış'')
INSERT INTO DY_PAYTRANS_TUR(LOGICALREF,MODULENR,TRCODE,ACIKLAMA)  VALUES(9,4,8,''Toptan Satış'')
INSERT INTO DY_PAYTRANS_TUR(LOGICALREF,MODULENR,TRCODE,ACIKLAMA)  VALUES(10,4,9,''Verilen Hizmet'')
INSERT INTO DY_PAYTRANS_TUR(LOGICALREF,MODULENR,TRCODE,ACIKLAMA)  VALUES(11,4,14,''Fiyat Farkı'')
INSERT INTO DY_PAYTRANS_TUR(LOGICALREF,MODULENR,TRCODE,ACIKLAMA)  VALUES(12,5,1,''Nakit Tahsilat'')
INSERT INTO DY_PAYTRANS_TUR(LOGICALREF,MODULENR,TRCODE,ACIKLAMA)  VALUES(13,5,2,''Nakit Ödeme'')
INSERT INTO DY_PAYTRANS_TUR(LOGICALREF,MODULENR,TRCODE,ACIKLAMA)  VALUES(14,5,3,''Borc Dekontu'')
INSERT INTO DY_PAYTRANS_TUR(LOGICALREF,MODULENR,TRCODE,ACIKLAMA)  VALUES(15,5,4,''Alacak Dekontu'')
INSERT INTO DY_PAYTRANS_TUR(LOGICALREF,MODULENR,TRCODE,ACIKLAMA)  VALUES(16,5,5,''Virman Fişi'')
INSERT INTO DY_PAYTRANS_TUR(LOGICALREF,MODULENR,TRCODE,ACIKLAMA)  VALUES(17,5,6,''Kur Farkı'')
INSERT INTO DY_PAYTRANS_TUR(LOGICALREF,MODULENR,TRCODE,ACIKLAMA)  VALUES(18,5,14,''Açılış Fişi'')
INSERT INTO DY_PAYTRANS_TUR(LOGICALREF,MODULENR,TRCODE,ACIKLAMA)  VALUES(19,5,44,''Alınan Serbest Meslek Mak.'')
INSERT INTO DY_PAYTRANS_TUR(LOGICALREF,MODULENR,TRCODE,ACIKLAMA)  VALUES(20,5,72,''Kredi Kartı'')
INSERT INTO DY_PAYTRANS_TUR(LOGICALREF,MODULENR,TRCODE,ACIKLAMA)  VALUES(21,6,1,''Çek Girişi'')
INSERT INTO DY_PAYTRANS_TUR(LOGICALREF,MODULENR,TRCODE,ACIKLAMA)  VALUES(22,6,2,''Senet Giriş'')
INSERT INTO DY_PAYTRANS_TUR(LOGICALREF,MODULENR,TRCODE,ACIKLAMA)  VALUES(23,6,3,''Çek Çıkış'')
INSERT INTO DY_PAYTRANS_TUR(LOGICALREF,MODULENR,TRCODE,ACIKLAMA)  VALUES(24,7,3,''Gelen Havale'')
INSERT INTO DY_PAYTRANS_TUR(LOGICALREF,MODULENR,TRCODE,ACIKLAMA)  VALUES(25,7,4,''Gönderilen Havale'')
INSERT INTO DY_PAYTRANS_TUR(LOGICALREF,MODULENR,TRCODE,ACIKLAMA)  VALUES(26,10,1,''Kasa Tahsilat'')
INSERT INTO DY_PAYTRANS_TUR(LOGICALREF,MODULENR,TRCODE,ACIKLAMA)  VALUES(27,10,2,''Kasa Ödeme'')
INSERT INTO DY_PAYTRANS_TUR(LOGICALREF,MODULENR,TRCODE,ACIKLAMA)  VALUES(28,61,3,''Çek İadesi'')
INSERT INTO DY_PAYTRANS_TUR(LOGICALREF,MODULENR,TRCODE,ACIKLAMA)  VALUES(29,61,4,''Portföye Çek İadesi'')
END
----------------------------------------------------------
SET @TARIH_1 = ''20000101''
SET @TARIH_2 = @_RAPTAR
DECLARE CariHesap Cursor For

SELECT LOGICALREF  FROM (
SELECT CLFLINE.CLIENTREF  LOGICALREF, SUM(CASE WHEN SIGN = 0 THEN AMOUNT ELSE 0-AMOUNT END) BAKIYE  
FROM {DATABASE}..LG_{FIRMA}_{DONEM}_CLFLINE CLFLINE
	LEFT JOIN {DATABASE}..LG_{FIRMA}_{DONEM}_INVOICE INVOICE ON CLFLINE.SOURCEFREF = INVOICE.LOGICALREF AND CLFLINE.MODULENR = 4
WHERE   ISNULL(INVOICE.FROMKASA,0) = 0 AND CLFLINE.DATE_ BETWEEN @TARIH_1 AND @TARIH_2 AND CLFLINE.CANCELLED =0 --and CLFLINE.CLIENTREF = 2
GROUP BY CLFLINE.CLIENTREF) D WHERE D.BAKIYE >0

OPEN CariHesap
FETCH NEXT FROM CariHesap INTO @CLIENTREF
WHILE @@FETCH_STATUS =0
BEGIN

DECLARE Borc Cursor For
	SELECT LOGICALREF,CARDREF,DATE_,PROCDATE,TRCODE,TOTAL  
	FROM   {DATABASE}..DY_PAYTRANS WHERE CARDREF = @CLIENTREF AND SIGN =0 AND CANCELLED=0 AND PAIDINCASH = 0 AND CLOSINGRATE = 0 AND PROCDATE BETWEEN @TARIH_1 AND @TARIH_2   
	ORDER BY CARDREF,DATE_,FTIME
	
DECLARE Alacak Cursor For
	SELECT LOGICALREF,CARDREF,DATE_,PROCDATE,TRCODE,TOTAL  
	FROM   {DATABASE}..DY_PAYTRANS WHERE CARDREF = @CLIENTREF AND SIGN =1 AND CANCELLED=0 AND PAIDINCASH = 0 AND CLOSINGRATE = 0 AND PROCDATE BETWEEN @TARIH_1 AND @TARIH_2   
	ORDER BY CARDREF,DATE_,FTIME
OPEN Alacak
FETCH NEXT FROM ALACAK INTO @A_LOGICALREF,@A_CARDREF,@A_DATE,@A_PROCDATE,@A_TRCODE,@A_TOTAL
	IF @@FETCH_STATUS = -1  -- Alacak Kaydİ bulunamazsa işlemi boş geçiyor
	BEGIN 
		SET @A_TOTAL = 0
	END 
	OPEN Borc
		FETCH NEXT FROM Borc INTO @B_LOGICALREF,@B_CARDREF,@B_DATE,@B_PROCDATE,@B_TRCODE,@B_TOTAL
			SET @B_KALAN = @B_TOTAL
			SET @A_KALAN = @A_TOTAL 
			WHILE @@FETCH_STATUS =0
				BEGIN   
TEKRAR:
					SET @B_KALAN = @B_KALAN - @A_KALAN 
					IF @B_KALAN > 0 
						BEGIN
							IF @A_KALAN > 0 
								BEGIN
									INSERT INTO {DATABASE}..DY_BorcTakip (CLIENTREF,B_PAYPLANREF,B_VADE_TARIHI,B_GIRIS_TARIHI,B_TUTAR,K_PAYPLANREF,K_VADE_TARIHI,K_GIRIS_TARIHI,K_ISLEM_TUTAR)
									values(@B_CARDREF,@B_LOGICALREF,@B_DATE,@B_PROCDATE,ROUND(@A_KALAN,2),@A_LOGICALREF,@A_DATE,@A_PROCDATE,ROUND(@A_KALAN,2))
								END 
							FETCH NEXT FROM ALACAK INTO @A_LOGICALREF,@A_CARDREF,@A_DATE,@A_PROCDATE,@A_TRCODE,@A_TOTAL
								IF @@FETCH_STATUS = -1  -- Alacak Kaydİ bulunamazsa işlemi boş geçiyor
									BEGIN 
										INSERT INTO {DATABASE}..DY_BorcTakip (CLIENTREF,B_PAYPLANREF,B_VADE_TARIHI,B_GIRIS_TARIHI,B_TUTAR,K_PAYPLANREF,K_VADE_TARIHI,K_GIRIS_TARIHI,K_ISLEM_TUTAR)
										values(@B_CARDREF,@B_LOGICALREF,@B_DATE,@B_PROCDATE,ROUND(@B_KALAN,2),NULL,NULL,NULL,0)
									
										INSERT INTO {DATABASE}..DY_BorcTakip (CLIENTREF,B_PAYPLANREF,B_VADE_TARIHI,B_GIRIS_TARIHI,B_TUTAR,K_PAYPLANREF,K_VADE_TARIHI,K_GIRIS_TARIHI,K_ISLEM_TUTAR)
										SELECT CARDREF,	LOGICALREF,DATE_,PROCDATE ,TOTAL,null ,NULL ,null ,0  FROM {DATABASE}..DY_PAYTRANS WHERE CARDREF = @CLIENTREF AND SIGN = 0 AND CANCELLED =0 AND PAIDINCASH = 0 AND  CLOSINGRATE = 0 AND  PROCDATE BETWEEN @TARIH_1 AND @TARIH_2 AND  LOGICALREF NOT IN (SELECT B_PAYPLANREF  FROM {DATABASE}..DY_BorcTakip WHERE CLIENTREF =  @CLIENTREF)
											
										goto BITIR
										SET @A_KALAN = 0
									END 
								IF @@FETCH_STATUS = 0  -- Alacak Kaydy bulunamazsa i?lemi bo? geçiyor
									BEGIN 
										SET @A_KALAN = @A_TOTAL
									END
							GOTO TEKRAR
						END 
						IF @B_KALAN = 0 OR @B_KALAN < 0
							BEGIN 
								SET @B_KAPANAN = @B_KALAN + @A_KALAN 
								INSERT INTO {DATABASE}..DY_BorcTakip (CLIENTREF,B_PAYPLANREF,B_VADE_TARIHI,B_GIRIS_TARIHI,B_TUTAR,K_PAYPLANREF,K_VADE_TARIHI,K_GIRIS_TARIHI,K_ISLEM_TUTAR)
								values(@B_CARDREF,@B_LOGICALREF,@B_DATE,@B_PROCDATE,ROUND(@B_KAPANAN,2),@A_LOGICALREF,@A_DATE,@A_PROCDATE,ROUND(@B_KAPANAN,2))
								SET @A_KALAN  = @A_KALAN - @B_KAPANAN
								FETCH NEXT FROM Borc INTO @B_LOGICALREF,@B_CARDREF,@B_DATE,@B_PROCDATE,@B_TRCODE,@B_TOTAL
								IF @@FETCH_STATUS = -1  -- Alacak Kaydİ bulunamazsa işlemi boş geçiyor
									BEGIN 
										GOTO BITIR
									END 
								SET @B_KALAN = @B_TOTAL
								GOTO TEKRAR
							END
						END
BITIR:
CLOSE Borc
DEALLOCATE Borc
CLOSE ALACAK
DEALLOCATE ALACAK
FETCH NEXT FROM CariHesap INTO @CLIENTREF
END
CLOSE CariHesap
DEALLOCATE CariHesap

SELECT 
CLCARD.CODE [Cari Hesap Kodu],
CLCARD.DEFINITION_ [Cari Hesap],
CLCARD.SPECODE [Cari Özel Kod],
CLCARD.SPECODE2 [Cari Özel Kod 2],
CLCARD.SPECODE2 [Cari Özel Kod 3],
ISNULL(PYT_1.TRCODE ,CLF_1.TRCODE) [Fiş Tür No],
PYT_TUR_1.ACIKLAMA [Fiş Türü],
B_GIRIS_TARIHI  [İşlem Tarihi],
B_VADE_TARIHI	[Vade Tarihi],
BT.B_TUTAR		[Tutar], 
ISNULL(PYT_2.TRCODE ,CLF_2.TRCODE) [Kapatan Fiş Tür No],
PYT_TUR_2.ACIKLAMA [Kapatan Fiş Türü],


K_GIRIS_TARIHI  [Kapatan İşlem Tarihi],
K_VADE_TARIHI	[Kapatan Vade Tarihi],
CASE WHEN ISNULL(PYT_2.TRCODE ,CLF_2.TRCODE) is null then 0 else BT.B_TUTAR END		[Kapatan Tutar],

CASE WHEN K_VADE_TARIHI IS null THEN DATEDIFF(dd,B_VADE_TARIHI,GETDATE())  ELSE DATEDIFF(dd,B_VADE_TARIHI,K_VADE_TARIHI) END [Gün Fark]


FROM DY_BorcTakip BT
INNER JOIN LG_{FIRMA}_CLCARD CLCARD    ON BT.CLIENTREF = CLCARD.LOGICALREF 
LEFT JOIN LG_{FIRMA}_{DONEM}_PAYTRANS PYT_1 ON BT.B_PAYPLANREF = PYT_1.LOGICALREF +  900000000
LEFT JOIN LG_{FIRMA}_{DONEM}_CLFLINE  CLF_1 ON BT.B_PAYPLANREF = CLF_1.LOGICALREF +  800000000
LEFT JOIN LG_{FIRMA}_{DONEM}_PAYTRANS PYT_2 ON BT.K_PAYPLANREF = PYT_2.LOGICALREF +  900000000
LEFT JOIN LG_{FIRMA}_{DONEM}_CLFLINE  CLF_2 ON BT.K_PAYPLANREF = CLF_2.LOGICALREF +  800000000
LEFT JOIN DY_PAYTRANS_TUR PYT_TUR_1 ON (PYT_1.MODULENR = PYT_TUR_1.MODULENR AND PYT_1.TRCODE = PYT_TUR_1.TRCODE) OR (CLF_1.MODULENR = PYT_TUR_1.MODULENR AND CLF_1.TRCODE = PYT_TUR_1.TRCODE) 
LEFT JOIN DY_PAYTRANS_TUR PYT_TUR_2 ON (PYT_2.MODULENR = PYT_TUR_2.MODULENR AND PYT_2.TRCODE = PYT_TUR_2.TRCODE) OR (CLF_2.MODULENR = PYT_TUR_2.MODULENR AND CLF_2.TRCODE = PYT_TUR_2.TRCODE)


', 4001, 4000)
     SET @QUERY3 = SUBSTRING('DECLARE @TARIH_1 DATE
DECLARE @TARIH_2 DATE
DECLARE @CLIENTREF integer
DECLARE @B_PAYPLANREF integer
DECLARE @B_VADE_TARIHI DATE
DECLARE @B_GIRIS_TARIHI DATE
DECLARE @B_ISLEM_TIPI varchar(55)
DECLARE @B_TUTAR AS FLOAT
DECLARE @K_PAYPLANREF AS integer Declare @K_VADE_TARIHI as date Declare @K_GIRIS_TARIHI as date Declare @K_ISLEM_TIPI as varchar(50) Declare @K_ISLEM_TUTAR as float
DECLARE @B_LOGICALREF integer declare @B_CARDREF AS integer DECLARE @B_DATE DATE DECLARE @B_PROCDATE DATE DECLARE @B_TRCODE integer declare @B_TOTAL float
DECLARE @A_LOGICALREF integer declare @A_CARDREF AS integer DECLARE @A_DATE DATE DECLARE @A_PROCDATE DATE DECLARE @A_TRCODE integer declare @A_TOTAL float
DECLARE @B_KALAN AS FLOAT DECLARE @A_KALAN AS FLOAT DECLARE @B_KAPANAN AS FLOAT
DECLARE @TABLO_SAY AS FLOAT
-- DY Paytrans Tablosu Oluşturuluyor
SET @TABLO_SAY = (SELECT COUNT(id) FROM {DATABASE}..sysobjects WHERE  NAME LIKE ''DY_PAYTRANS'')
IF @TABLO_SAY > 0 
	BEGIN
		DROP TABLE {DATABASE}..DY_PAYTRANS
	END
	SELECT * INTO  {DATABASE}..DY_PAYTRANS 
	FROM (
	SELECT 
	ISNULL(PAYTRANS.LOGICALREF + 900000000,CLFLINE.LOGICALREF + 800000000) LOGICALREF,
	ISNULL(PAYTRANS.CARDREF,CLFLINE.CLIENTREF) CARDREF,
	ISNULL(PAYTRANS.DATE_,CLFLINE.DATE_) DATE_,
	ISNULL(CLFLINE.FTIME,0) FTIME,
	ISNULL(PAYTRANS.PROCDATE,CLFLINE.DATE_) PROCDATE,
	ISNULL(PAYTRANS.TRCODE,CLFLINE.TRCODE)  TRCODE,
	ROUND(ISNULL(CASE WHEN PAYTRANS.TRCURR IN (0,160) THEN PAYTRANS.TOTAL ELSE PAYTRANS.TOTAL * PAYTRANS.TRRATE END,CLFLINE.AMOUNT),2) TOTAL,
	ISNULL(PAYTRANS.FICHEREF,CLFLINE.SOURCEFREF ) FICHEREF,
	ISNULL(PAYTRANS.SIGN,CLFLINE.SIGN) SIGN,
	ISNULL(PAYTRANS.PAIDINCASH,0) PAIDINCASH,
	ISNULL(PAYTRANS.CLOSINGRATE,0) CLOSINGRATE,
	ISNULL(PAYTRANS.CANCELLED,CLFLINE.CANCELLED) CANCELLED
	FROM {DATABASE}..LG_{FIRMA}_{DONEM}_CLFLINE CLFLINE
		LEFT JOIN {DATABASE}..LG_{FIRMA}_{DONEM}_INVOICE	INVOICE  ON CLFLINE.SOURCEFREF = INVOICE.LOGICALREF AND CLFLINE.MODULENR = 4
		LEFT JOIN {DATABASE}..LG_{FIRMA}_{DONEM}_PAYTRANS	PAYTRANS ON CLFLINE.MODULENR = PAYTRANS.MODULENR    AND ((CLFLINE.TRCODE = 14 AND  CLFLINE.LOGICALREF  = PAYTRANS.FICHEREF) OR CLFLINE.TRCODE <> 14 AND  CLFLINE.SOURCEFREF = PAYTRANS.FICHEREF)
	WHERE   ISNULL(INVOICE.FROMKASA,0) = 0 AND CLFLINE.CANCELLED =0 
		) Paytrans
		  CREATE UNIQUE INDEX [LOGICALREF] ON {DATABASE}..DY_PAYTRANS (LOGICALREF ASC)
		  CREATE INDEX CARDREF ON {DATABASE}..DY_PAYTRANS (CARDREF ASC)

--   DY Borc Takip Tablosunun Oluşturulmasİ
SET @TABLO_SAY = (SELECT COUNT(id) FROM {DATABASE}..sysobjects WHERE  NAME LIKE ''DY_BorcTakip'')
IF @TABLO_SAY > 0 
	BEGIN
		DROP TABLE {DATABASE}..DY_BorcTakip
	END
	CREATE TABLE {DATABASE}..[DY_BorcTakip](
		[LOGICALREF] [int] IDENTITY(1,1) NOT NULL,
		[CLIENTREF] [int] NULL,
		[B_PAYPLANREF] [int] NULL,
		[B_VADE_TARIHI] [date] NULL,
		[B_GIRIS_TARIHI] [date] NULL,
		[B_ISLEM_TIPI] [nvarchar](50) NULL,
		[B_TUTAR] [float] NULL,
		[K_PAYPLANREF] [int] NULL,
		[K_VADE_TARIHI] [date] NULL,
		[K_GIRIS_TARIHI] [date] NULL,
		[K_ISLEM_TIPI] [nvarchar](50) NULL,
		[K_ISLEM_TUTAR] [float] NULL,
	 CONSTRAINT [PK_DY_BorcTakip] PRIMARY KEY CLUSTERED 
	(
		[LOGICALREF] ASC
	)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
	) ON [PRIMARY]



------DY_PAYTRANS_TUR TABLOSU OLUŞTURULUYOR

SET @TABLO_SAY = (SELECT COUNT(id) FROM {DATABASE}..sysobjects WHERE  NAME LIKE ''DY_PAYTRANS_TUR'')
IF @TABLO_SAY =0
	BEGIN

CREATE TABLE [dbo].[DY_PAYTRANS_TUR](
	[LOGICALREF] [int] NOT NULL,
	[MODULENR] [int] NOT NULL,
	[TRCODE]  [int] NOT NULL,
	[ACIKLAMA] [nvarchar](50) NULL,
 CONSTRAINT [PK_DY_PAYTRANS_TUR] PRIMARY KEY CLUSTERED 
(
	[LOGICALREF] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY]

INSERT INTO DY_PAYTRANS_TUR(LOGICALREF,MODULENR,TRCODE,ACIKLAMA)  VALUES(1,3,1,''Ödemeli Sipariş'')
INSERT INTO DY_PAYTRANS_TUR(LOGICALREF,MODULENR,TRCODE,ACIKLAMA)  VALUES(2,4,1,''Satın Alma Fat.'')
INSERT INTO DY_PAYTRANS_TUR(LOGICALREF,MODULENR,TRCODE,ACIKLAMA)  VALUES(3,4,2,'''')
INSERT INTO DY_PAYTRANS_TUR(LOGICALREF,MODULENR,TRCODE,ACIKLAMA)  VALUES(4,4,3,''Toptan Satış İade'')
INSERT INTO DY_PAYTRANS_TUR(LOGICALREF,MODULENR,TRCODE,ACIKLAMA)  VALUES(5,4,4,''Alınan Hizmet Fat.'')
INSERT INTO DY_PAYTRANS_TUR(LOGICALREF,MODULENR,TRCODE,ACIKLAMA)  VALUES(6,4,5,''Alınan Proforma'')
INSERT INTO DY_PAYTRANS_TUR(LOGICALREF,MODULENR,TRCODE,ACIKLAMA)  VALUES(7,4,6,''Satınalma İade Fat.'')
INSERT INTO DY_PAYTRANS_TUR(LOGICALREF,MODULENR,TRCODE,ACIKLAMA)  VALUES(8,4,7,''Parekende Satış'')
INSERT INTO DY_PAYTRANS_TUR(LOGICALREF,MODULENR,TRCODE,ACIKLAMA)  VALUES(9,4,8,''Toptan Satış'')
INSERT INTO DY_PAYTRANS_TUR(LOGICALREF,MODULENR,TRCODE,ACIKLAMA)  VALUES(10,4,9,''Verilen Hizmet'')
INSERT INTO DY_PAYTRANS_TUR(LOGICALREF,MODULENR,TRCODE,ACIKLAMA)  VALUES(11,4,14,''Fiyat Farkı'')
INSERT INTO DY_PAYTRANS_TUR(LOGICALREF,MODULENR,TRCODE,ACIKLAMA)  VALUES(12,5,1,''Nakit Tahsilat'')
INSERT INTO DY_PAYTRANS_TUR(LOGICALREF,MODULENR,TRCODE,ACIKLAMA)  VALUES(13,5,2,''Nakit Ödeme'')
INSERT INTO DY_PAYTRANS_TUR(LOGICALREF,MODULENR,TRCODE,ACIKLAMA)  VALUES(14,5,3,''Borc Dekontu'')
INSERT INTO DY_PAYTRANS_TUR(LOGICALREF,MODULENR,TRCODE,ACIKLAMA)  VALUES(15,5,4,''Alacak Dekontu'')
INSERT INTO DY_PAYTRANS_TUR(LOGICALREF,MODULENR,TRCODE,ACIKLAMA)  VALUES(16,5,5,''Virman Fişi'')
INSERT INTO DY_PAYTRANS_TUR(LOGICALREF,MODULENR,TRCODE,ACIKLAMA)  VALUES(17,5,6,''Kur Farkı'')
INSERT INTO DY_PAYTRANS_TUR(LOGICALREF,MODULENR,TRCODE,ACIKLAMA)  VALUES(18,5,14,''Açılış Fişi'')
INSERT INTO DY_PAYTRANS_TUR(LOGICALREF,MODULENR,TRCODE,ACIKLAMA)  VALUES(19,5,44,''Alınan Serbest Meslek Mak.'')
INSERT INTO DY_PAYTRANS_TUR(LOGICALREF,MODULENR,TRCODE,ACIKLAMA)  VALUES(20,5,72,''Kredi Kartı'')
INSERT INTO DY_PAYTRANS_TUR(LOGICALREF,MODULENR,TRCODE,ACIKLAMA)  VALUES(21,6,1,''Çek Girişi'')
INSERT INTO DY_PAYTRANS_TUR(LOGICALREF,MODULENR,TRCODE,ACIKLAMA)  VALUES(22,6,2,''Senet Giriş'')
INSERT INTO DY_PAYTRANS_TUR(LOGICALREF,MODULENR,TRCODE,ACIKLAMA)  VALUES(23,6,3,''Çek Çıkış'')
INSERT INTO DY_PAYTRANS_TUR(LOGICALREF,MODULENR,TRCODE,ACIKLAMA)  VALUES(24,7,3,''Gelen Havale'')
INSERT INTO DY_PAYTRANS_TUR(LOGICALREF,MODULENR,TRCODE,ACIKLAMA)  VALUES(25,7,4,''Gönderilen Havale'')
INSERT INTO DY_PAYTRANS_TUR(LOGICALREF,MODULENR,TRCODE,ACIKLAMA)  VALUES(26,10,1,''Kasa Tahsilat'')
INSERT INTO DY_PAYTRANS_TUR(LOGICALREF,MODULENR,TRCODE,ACIKLAMA)  VALUES(27,10,2,''Kasa Ödeme'')
INSERT INTO DY_PAYTRANS_TUR(LOGICALREF,MODULENR,TRCODE,ACIKLAMA)  VALUES(28,61,3,''Çek İadesi'')
INSERT INTO DY_PAYTRANS_TUR(LOGICALREF,MODULENR,TRCODE,ACIKLAMA)  VALUES(29,61,4,''Portföye Çek İadesi'')
END
----------------------------------------------------------
SET @TARIH_1 = ''20000101''
SET @TARIH_2 = @_RAPTAR
DECLARE CariHesap Cursor For

SELECT LOGICALREF  FROM (
SELECT CLFLINE.CLIENTREF  LOGICALREF, SUM(CASE WHEN SIGN = 0 THEN AMOUNT ELSE 0-AMOUNT END) BAKIYE  
FROM {DATABASE}..LG_{FIRMA}_{DONEM}_CLFLINE CLFLINE
	LEFT JOIN {DATABASE}..LG_{FIRMA}_{DONEM}_INVOICE INVOICE ON CLFLINE.SOURCEFREF = INVOICE.LOGICALREF AND CLFLINE.MODULENR = 4
WHERE   ISNULL(INVOICE.FROMKASA,0) = 0 AND CLFLINE.DATE_ BETWEEN @TARIH_1 AND @TARIH_2 AND CLFLINE.CANCELLED =0 --and CLFLINE.CLIENTREF = 2
GROUP BY CLFLINE.CLIENTREF) D WHERE D.BAKIYE >0

OPEN CariHesap
FETCH NEXT FROM CariHesap INTO @CLIENTREF
WHILE @@FETCH_STATUS =0
BEGIN

DECLARE Borc Cursor For
	SELECT LOGICALREF,CARDREF,DATE_,PROCDATE,TRCODE,TOTAL  
	FROM   {DATABASE}..DY_PAYTRANS WHERE CARDREF = @CLIENTREF AND SIGN =0 AND CANCELLED=0 AND PAIDINCASH = 0 AND CLOSINGRATE = 0 AND PROCDATE BETWEEN @TARIH_1 AND @TARIH_2   
	ORDER BY CARDREF,DATE_,FTIME
	
DECLARE Alacak Cursor For
	SELECT LOGICALREF,CARDREF,DATE_,PROCDATE,TRCODE,TOTAL  
	FROM   {DATABASE}..DY_PAYTRANS WHERE CARDREF = @CLIENTREF AND SIGN =1 AND CANCELLED=0 AND PAIDINCASH = 0 AND CLOSINGRATE = 0 AND PROCDATE BETWEEN @TARIH_1 AND @TARIH_2   
	ORDER BY CARDREF,DATE_,FTIME
OPEN Alacak
FETCH NEXT FROM ALACAK INTO @A_LOGICALREF,@A_CARDREF,@A_DATE,@A_PROCDATE,@A_TRCODE,@A_TOTAL
	IF @@FETCH_STATUS = -1  -- Alacak Kaydİ bulunamazsa işlemi boş geçiyor
	BEGIN 
		SET @A_TOTAL = 0
	END 
	OPEN Borc
		FETCH NEXT FROM Borc INTO @B_LOGICALREF,@B_CARDREF,@B_DATE,@B_PROCDATE,@B_TRCODE,@B_TOTAL
			SET @B_KALAN = @B_TOTAL
			SET @A_KALAN = @A_TOTAL 
			WHILE @@FETCH_STATUS =0
				BEGIN   
TEKRAR:
					SET @B_KALAN = @B_KALAN - @A_KALAN 
					IF @B_KALAN > 0 
						BEGIN
							IF @A_KALAN > 0 
								BEGIN
									INSERT INTO {DATABASE}..DY_BorcTakip (CLIENTREF,B_PAYPLANREF,B_VADE_TARIHI,B_GIRIS_TARIHI,B_TUTAR,K_PAYPLANREF,K_VADE_TARIHI,K_GIRIS_TARIHI,K_ISLEM_TUTAR)
									values(@B_CARDREF,@B_LOGICALREF,@B_DATE,@B_PROCDATE,ROUND(@A_KALAN,2),@A_LOGICALREF,@A_DATE,@A_PROCDATE,ROUND(@A_KALAN,2))
								END 
							FETCH NEXT FROM ALACAK INTO @A_LOGICALREF,@A_CARDREF,@A_DATE,@A_PROCDATE,@A_TRCODE,@A_TOTAL
								IF @@FETCH_STATUS = -1  -- Alacak Kaydİ bulunamazsa işlemi boş geçiyor
									BEGIN 
										INSERT INTO {DATABASE}..DY_BorcTakip (CLIENTREF,B_PAYPLANREF,B_VADE_TARIHI,B_GIRIS_TARIHI,B_TUTAR,K_PAYPLANREF,K_VADE_TARIHI,K_GIRIS_TARIHI,K_ISLEM_TUTAR)
										values(@B_CARDREF,@B_LOGICALREF,@B_DATE,@B_PROCDATE,ROUND(@B_KALAN,2),NULL,NULL,NULL,0)
									
										INSERT INTO {DATABASE}..DY_BorcTakip (CLIENTREF,B_PAYPLANREF,B_VADE_TARIHI,B_GIRIS_TARIHI,B_TUTAR,K_PAYPLANREF,K_VADE_TARIHI,K_GIRIS_TARIHI,K_ISLEM_TUTAR)
										SELECT CARDREF,	LOGICALREF,DATE_,PROCDATE ,TOTAL,null ,NULL ,null ,0  FROM {DATABASE}..DY_PAYTRANS WHERE CARDREF = @CLIENTREF AND SIGN = 0 AND CANCELLED =0 AND PAIDINCASH = 0 AND  CLOSINGRATE = 0 AND  PROCDATE BETWEEN @TARIH_1 AND @TARIH_2 AND  LOGICALREF NOT IN (SELECT B_PAYPLANREF  FROM {DATABASE}..DY_BorcTakip WHERE CLIENTREF =  @CLIENTREF)
											
										goto BITIR
										SET @A_KALAN = 0
									END 
								IF @@FETCH_STATUS = 0  -- Alacak Kaydy bulunamazsa i?lemi bo? geçiyor
									BEGIN 
										SET @A_KALAN = @A_TOTAL
									END
							GOTO TEKRAR
						END 
						IF @B_KALAN = 0 OR @B_KALAN < 0
							BEGIN 
								SET @B_KAPANAN = @B_KALAN + @A_KALAN 
								INSERT INTO {DATABASE}..DY_BorcTakip (CLIENTREF,B_PAYPLANREF,B_VADE_TARIHI,B_GIRIS_TARIHI,B_TUTAR,K_PAYPLANREF,K_VADE_TARIHI,K_GIRIS_TARIHI,K_ISLEM_TUTAR)
								values(@B_CARDREF,@B_LOGICALREF,@B_DATE,@B_PROCDATE,ROUND(@B_KAPANAN,2),@A_LOGICALREF,@A_DATE,@A_PROCDATE,ROUND(@B_KAPANAN,2))
								SET @A_KALAN  = @A_KALAN - @B_KAPANAN
								FETCH NEXT FROM Borc INTO @B_LOGICALREF,@B_CARDREF,@B_DATE,@B_PROCDATE,@B_TRCODE,@B_TOTAL
								IF @@FETCH_STATUS = -1  -- Alacak Kaydİ bulunamazsa işlemi boş geçiyor
									BEGIN 
										GOTO BITIR
									END 
								SET @B_KALAN = @B_TOTAL
								GOTO TEKRAR
							END
						END
BITIR:
CLOSE Borc
DEALLOCATE Borc
CLOSE ALACAK
DEALLOCATE ALACAK
FETCH NEXT FROM CariHesap INTO @CLIENTREF
END
CLOSE CariHesap
DEALLOCATE CariHesap

SELECT 
CLCARD.CODE [Cari Hesap Kodu],
CLCARD.DEFINITION_ [Cari Hesap],
CLCARD.SPECODE [Cari Özel Kod],
CLCARD.SPECODE2 [Cari Özel Kod 2],
CLCARD.SPECODE2 [Cari Özel Kod 3],
ISNULL(PYT_1.TRCODE ,CLF_1.TRCODE) [Fiş Tür No],
PYT_TUR_1.ACIKLAMA [Fiş Türü],
B_GIRIS_TARIHI  [İşlem Tarihi],
B_VADE_TARIHI	[Vade Tarihi],
BT.B_TUTAR		[Tutar], 
ISNULL(PYT_2.TRCODE ,CLF_2.TRCODE) [Kapatan Fiş Tür No],
PYT_TUR_2.ACIKLAMA [Kapatan Fiş Türü],


K_GIRIS_TARIHI  [Kapatan İşlem Tarihi],
K_VADE_TARIHI	[Kapatan Vade Tarihi],
CASE WHEN ISNULL(PYT_2.TRCODE ,CLF_2.TRCODE) is null then 0 else BT.B_TUTAR END		[Kapatan Tutar],

CASE WHEN K_VADE_TARIHI IS null THEN DATEDIFF(dd,B_VADE_TARIHI,GETDATE())  ELSE DATEDIFF(dd,B_VADE_TARIHI,K_VADE_TARIHI) END [Gün Fark]


FROM DY_BorcTakip BT
INNER JOIN LG_{FIRMA}_CLCARD CLCARD    ON BT.CLIENTREF = CLCARD.LOGICALREF 
LEFT JOIN LG_{FIRMA}_{DONEM}_PAYTRANS PYT_1 ON BT.B_PAYPLANREF = PYT_1.LOGICALREF +  900000000
LEFT JOIN LG_{FIRMA}_{DONEM}_CLFLINE  CLF_1 ON BT.B_PAYPLANREF = CLF_1.LOGICALREF +  800000000
LEFT JOIN LG_{FIRMA}_{DONEM}_PAYTRANS PYT_2 ON BT.K_PAYPLANREF = PYT_2.LOGICALREF +  900000000
LEFT JOIN LG_{FIRMA}_{DONEM}_CLFLINE  CLF_2 ON BT.K_PAYPLANREF = CLF_2.LOGICALREF +  800000000
LEFT JOIN DY_PAYTRANS_TUR PYT_TUR_1 ON (PYT_1.MODULENR = PYT_TUR_1.MODULENR AND PYT_1.TRCODE = PYT_TUR_1.TRCODE) OR (CLF_1.MODULENR = PYT_TUR_1.MODULENR AND CLF_1.TRCODE = PYT_TUR_1.TRCODE) 
LEFT JOIN DY_PAYTRANS_TUR PYT_TUR_2 ON (PYT_2.MODULENR = PYT_TUR_2.MODULENR AND PYT_2.TRCODE = PYT_TUR_2.TRCODE) OR (CLF_2.MODULENR = PYT_TUR_2.MODULENR AND CLF_2.TRCODE = PYT_TUR_2.TRCODE)


', 8001, 4000)
     SET @QUERY4 = SUBSTRING('DECLARE @TARIH_1 DATE
DECLARE @TARIH_2 DATE
DECLARE @CLIENTREF integer
DECLARE @B_PAYPLANREF integer
DECLARE @B_VADE_TARIHI DATE
DECLARE @B_GIRIS_TARIHI DATE
DECLARE @B_ISLEM_TIPI varchar(55)
DECLARE @B_TUTAR AS FLOAT
DECLARE @K_PAYPLANREF AS integer Declare @K_VADE_TARIHI as date Declare @K_GIRIS_TARIHI as date Declare @K_ISLEM_TIPI as varchar(50) Declare @K_ISLEM_TUTAR as float
DECLARE @B_LOGICALREF integer declare @B_CARDREF AS integer DECLARE @B_DATE DATE DECLARE @B_PROCDATE DATE DECLARE @B_TRCODE integer declare @B_TOTAL float
DECLARE @A_LOGICALREF integer declare @A_CARDREF AS integer DECLARE @A_DATE DATE DECLARE @A_PROCDATE DATE DECLARE @A_TRCODE integer declare @A_TOTAL float
DECLARE @B_KALAN AS FLOAT DECLARE @A_KALAN AS FLOAT DECLARE @B_KAPANAN AS FLOAT
DECLARE @TABLO_SAY AS FLOAT
-- DY Paytrans Tablosu Oluşturuluyor
SET @TABLO_SAY = (SELECT COUNT(id) FROM {DATABASE}..sysobjects WHERE  NAME LIKE ''DY_PAYTRANS'')
IF @TABLO_SAY > 0 
	BEGIN
		DROP TABLE {DATABASE}..DY_PAYTRANS
	END
	SELECT * INTO  {DATABASE}..DY_PAYTRANS 
	FROM (
	SELECT 
	ISNULL(PAYTRANS.LOGICALREF + 900000000,CLFLINE.LOGICALREF + 800000000) LOGICALREF,
	ISNULL(PAYTRANS.CARDREF,CLFLINE.CLIENTREF) CARDREF,
	ISNULL(PAYTRANS.DATE_,CLFLINE.DATE_) DATE_,
	ISNULL(CLFLINE.FTIME,0) FTIME,
	ISNULL(PAYTRANS.PROCDATE,CLFLINE.DATE_) PROCDATE,
	ISNULL(PAYTRANS.TRCODE,CLFLINE.TRCODE)  TRCODE,
	ROUND(ISNULL(CASE WHEN PAYTRANS.TRCURR IN (0,160) THEN PAYTRANS.TOTAL ELSE PAYTRANS.TOTAL * PAYTRANS.TRRATE END,CLFLINE.AMOUNT),2) TOTAL,
	ISNULL(PAYTRANS.FICHEREF,CLFLINE.SOURCEFREF ) FICHEREF,
	ISNULL(PAYTRANS.SIGN,CLFLINE.SIGN) SIGN,
	ISNULL(PAYTRANS.PAIDINCASH,0) PAIDINCASH,
	ISNULL(PAYTRANS.CLOSINGRATE,0) CLOSINGRATE,
	ISNULL(PAYTRANS.CANCELLED,CLFLINE.CANCELLED) CANCELLED
	FROM {DATABASE}..LG_{FIRMA}_{DONEM}_CLFLINE CLFLINE
		LEFT JOIN {DATABASE}..LG_{FIRMA}_{DONEM}_INVOICE	INVOICE  ON CLFLINE.SOURCEFREF = INVOICE.LOGICALREF AND CLFLINE.MODULENR = 4
		LEFT JOIN {DATABASE}..LG_{FIRMA}_{DONEM}_PAYTRANS	PAYTRANS ON CLFLINE.MODULENR = PAYTRANS.MODULENR    AND ((CLFLINE.TRCODE = 14 AND  CLFLINE.LOGICALREF  = PAYTRANS.FICHEREF) OR CLFLINE.TRCODE <> 14 AND  CLFLINE.SOURCEFREF = PAYTRANS.FICHEREF)
	WHERE   ISNULL(INVOICE.FROMKASA,0) = 0 AND CLFLINE.CANCELLED =0 
		) Paytrans
		  CREATE UNIQUE INDEX [LOGICALREF] ON {DATABASE}..DY_PAYTRANS (LOGICALREF ASC)
		  CREATE INDEX CARDREF ON {DATABASE}..DY_PAYTRANS (CARDREF ASC)

--   DY Borc Takip Tablosunun Oluşturulmasİ
SET @TABLO_SAY = (SELECT COUNT(id) FROM {DATABASE}..sysobjects WHERE  NAME LIKE ''DY_BorcTakip'')
IF @TABLO_SAY > 0 
	BEGIN
		DROP TABLE {DATABASE}..DY_BorcTakip
	END
	CREATE TABLE {DATABASE}..[DY_BorcTakip](
		[LOGICALREF] [int] IDENTITY(1,1) NOT NULL,
		[CLIENTREF] [int] NULL,
		[B_PAYPLANREF] [int] NULL,
		[B_VADE_TARIHI] [date] NULL,
		[B_GIRIS_TARIHI] [date] NULL,
		[B_ISLEM_TIPI] [nvarchar](50) NULL,
		[B_TUTAR] [float] NULL,
		[K_PAYPLANREF] [int] NULL,
		[K_VADE_TARIHI] [date] NULL,
		[K_GIRIS_TARIHI] [date] NULL,
		[K_ISLEM_TIPI] [nvarchar](50) NULL,
		[K_ISLEM_TUTAR] [float] NULL,
	 CONSTRAINT [PK_DY_BorcTakip] PRIMARY KEY CLUSTERED 
	(
		[LOGICALREF] ASC
	)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
	) ON [PRIMARY]



------DY_PAYTRANS_TUR TABLOSU OLUŞTURULUYOR

SET @TABLO_SAY = (SELECT COUNT(id) FROM {DATABASE}..sysobjects WHERE  NAME LIKE ''DY_PAYTRANS_TUR'')
IF @TABLO_SAY =0
	BEGIN

CREATE TABLE [dbo].[DY_PAYTRANS_TUR](
	[LOGICALREF] [int] NOT NULL,
	[MODULENR] [int] NOT NULL,
	[TRCODE]  [int] NOT NULL,
	[ACIKLAMA] [nvarchar](50) NULL,
 CONSTRAINT [PK_DY_PAYTRANS_TUR] PRIMARY KEY CLUSTERED 
(
	[LOGICALREF] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY]

INSERT INTO DY_PAYTRANS_TUR(LOGICALREF,MODULENR,TRCODE,ACIKLAMA)  VALUES(1,3,1,''Ödemeli Sipariş'')
INSERT INTO DY_PAYTRANS_TUR(LOGICALREF,MODULENR,TRCODE,ACIKLAMA)  VALUES(2,4,1,''Satın Alma Fat.'')
INSERT INTO DY_PAYTRANS_TUR(LOGICALREF,MODULENR,TRCODE,ACIKLAMA)  VALUES(3,4,2,'''')
INSERT INTO DY_PAYTRANS_TUR(LOGICALREF,MODULENR,TRCODE,ACIKLAMA)  VALUES(4,4,3,''Toptan Satış İade'')
INSERT INTO DY_PAYTRANS_TUR(LOGICALREF,MODULENR,TRCODE,ACIKLAMA)  VALUES(5,4,4,''Alınan Hizmet Fat.'')
INSERT INTO DY_PAYTRANS_TUR(LOGICALREF,MODULENR,TRCODE,ACIKLAMA)  VALUES(6,4,5,''Alınan Proforma'')
INSERT INTO DY_PAYTRANS_TUR(LOGICALREF,MODULENR,TRCODE,ACIKLAMA)  VALUES(7,4,6,''Satınalma İade Fat.'')
INSERT INTO DY_PAYTRANS_TUR(LOGICALREF,MODULENR,TRCODE,ACIKLAMA)  VALUES(8,4,7,''Parekende Satış'')
INSERT INTO DY_PAYTRANS_TUR(LOGICALREF,MODULENR,TRCODE,ACIKLAMA)  VALUES(9,4,8,''Toptan Satış'')
INSERT INTO DY_PAYTRANS_TUR(LOGICALREF,MODULENR,TRCODE,ACIKLAMA)  VALUES(10,4,9,''Verilen Hizmet'')
INSERT INTO DY_PAYTRANS_TUR(LOGICALREF,MODULENR,TRCODE,ACIKLAMA)  VALUES(11,4,14,''Fiyat Farkı'')
INSERT INTO DY_PAYTRANS_TUR(LOGICALREF,MODULENR,TRCODE,ACIKLAMA)  VALUES(12,5,1,''Nakit Tahsilat'')
INSERT INTO DY_PAYTRANS_TUR(LOGICALREF,MODULENR,TRCODE,ACIKLAMA)  VALUES(13,5,2,''Nakit Ödeme'')
INSERT INTO DY_PAYTRANS_TUR(LOGICALREF,MODULENR,TRCODE,ACIKLAMA)  VALUES(14,5,3,''Borc Dekontu'')
INSERT INTO DY_PAYTRANS_TUR(LOGICALREF,MODULENR,TRCODE,ACIKLAMA)  VALUES(15,5,4,''Alacak Dekontu'')
INSERT INTO DY_PAYTRANS_TUR(LOGICALREF,MODULENR,TRCODE,ACIKLAMA)  VALUES(16,5,5,''Virman Fişi'')
INSERT INTO DY_PAYTRANS_TUR(LOGICALREF,MODULENR,TRCODE,ACIKLAMA)  VALUES(17,5,6,''Kur Farkı'')
INSERT INTO DY_PAYTRANS_TUR(LOGICALREF,MODULENR,TRCODE,ACIKLAMA)  VALUES(18,5,14,''Açılış Fişi'')
INSERT INTO DY_PAYTRANS_TUR(LOGICALREF,MODULENR,TRCODE,ACIKLAMA)  VALUES(19,5,44,''Alınan Serbest Meslek Mak.'')
INSERT INTO DY_PAYTRANS_TUR(LOGICALREF,MODULENR,TRCODE,ACIKLAMA)  VALUES(20,5,72,''Kredi Kartı'')
INSERT INTO DY_PAYTRANS_TUR(LOGICALREF,MODULENR,TRCODE,ACIKLAMA)  VALUES(21,6,1,''Çek Girişi'')
INSERT INTO DY_PAYTRANS_TUR(LOGICALREF,MODULENR,TRCODE,ACIKLAMA)  VALUES(22,6,2,''Senet Giriş'')
INSERT INTO DY_PAYTRANS_TUR(LOGICALREF,MODULENR,TRCODE,ACIKLAMA)  VALUES(23,6,3,''Çek Çıkış'')
INSERT INTO DY_PAYTRANS_TUR(LOGICALREF,MODULENR,TRCODE,ACIKLAMA)  VALUES(24,7,3,''Gelen Havale'')
INSERT INTO DY_PAYTRANS_TUR(LOGICALREF,MODULENR,TRCODE,ACIKLAMA)  VALUES(25,7,4,''Gönderilen Havale'')
INSERT INTO DY_PAYTRANS_TUR(LOGICALREF,MODULENR,TRCODE,ACIKLAMA)  VALUES(26,10,1,''Kasa Tahsilat'')
INSERT INTO DY_PAYTRANS_TUR(LOGICALREF,MODULENR,TRCODE,ACIKLAMA)  VALUES(27,10,2,''Kasa Ödeme'')
INSERT INTO DY_PAYTRANS_TUR(LOGICALREF,MODULENR,TRCODE,ACIKLAMA)  VALUES(28,61,3,''Çek İadesi'')
INSERT INTO DY_PAYTRANS_TUR(LOGICALREF,MODULENR,TRCODE,ACIKLAMA)  VALUES(29,61,4,''Portföye Çek İadesi'')
END
----------------------------------------------------------
SET @TARIH_1 = ''20000101''
SET @TARIH_2 = @_RAPTAR
DECLARE CariHesap Cursor For

SELECT LOGICALREF  FROM (
SELECT CLFLINE.CLIENTREF  LOGICALREF, SUM(CASE WHEN SIGN = 0 THEN AMOUNT ELSE 0-AMOUNT END) BAKIYE  
FROM {DATABASE}..LG_{FIRMA}_{DONEM}_CLFLINE CLFLINE
	LEFT JOIN {DATABASE}..LG_{FIRMA}_{DONEM}_INVOICE INVOICE ON CLFLINE.SOURCEFREF = INVOICE.LOGICALREF AND CLFLINE.MODULENR = 4
WHERE   ISNULL(INVOICE.FROMKASA,0) = 0 AND CLFLINE.DATE_ BETWEEN @TARIH_1 AND @TARIH_2 AND CLFLINE.CANCELLED =0 --and CLFLINE.CLIENTREF = 2
GROUP BY CLFLINE.CLIENTREF) D WHERE D.BAKIYE >0

OPEN CariHesap
FETCH NEXT FROM CariHesap INTO @CLIENTREF
WHILE @@FETCH_STATUS =0
BEGIN

DECLARE Borc Cursor For
	SELECT LOGICALREF,CARDREF,DATE_,PROCDATE,TRCODE,TOTAL  
	FROM   {DATABASE}..DY_PAYTRANS WHERE CARDREF = @CLIENTREF AND SIGN =0 AND CANCELLED=0 AND PAIDINCASH = 0 AND CLOSINGRATE = 0 AND PROCDATE BETWEEN @TARIH_1 AND @TARIH_2   
	ORDER BY CARDREF,DATE_,FTIME
	
DECLARE Alacak Cursor For
	SELECT LOGICALREF,CARDREF,DATE_,PROCDATE,TRCODE,TOTAL  
	FROM   {DATABASE}..DY_PAYTRANS WHERE CARDREF = @CLIENTREF AND SIGN =1 AND CANCELLED=0 AND PAIDINCASH = 0 AND CLOSINGRATE = 0 AND PROCDATE BETWEEN @TARIH_1 AND @TARIH_2   
	ORDER BY CARDREF,DATE_,FTIME
OPEN Alacak
FETCH NEXT FROM ALACAK INTO @A_LOGICALREF,@A_CARDREF,@A_DATE,@A_PROCDATE,@A_TRCODE,@A_TOTAL
	IF @@FETCH_STATUS = -1  -- Alacak Kaydİ bulunamazsa işlemi boş geçiyor
	BEGIN 
		SET @A_TOTAL = 0
	END 
	OPEN Borc
		FETCH NEXT FROM Borc INTO @B_LOGICALREF,@B_CARDREF,@B_DATE,@B_PROCDATE,@B_TRCODE,@B_TOTAL
			SET @B_KALAN = @B_TOTAL
			SET @A_KALAN = @A_TOTAL 
			WHILE @@FETCH_STATUS =0
				BEGIN   
TEKRAR:
					SET @B_KALAN = @B_KALAN - @A_KALAN 
					IF @B_KALAN > 0 
						BEGIN
							IF @A_KALAN > 0 
								BEGIN
									INSERT INTO {DATABASE}..DY_BorcTakip (CLIENTREF,B_PAYPLANREF,B_VADE_TARIHI,B_GIRIS_TARIHI,B_TUTAR,K_PAYPLANREF,K_VADE_TARIHI,K_GIRIS_TARIHI,K_ISLEM_TUTAR)
									values(@B_CARDREF,@B_LOGICALREF,@B_DATE,@B_PROCDATE,ROUND(@A_KALAN,2),@A_LOGICALREF,@A_DATE,@A_PROCDATE,ROUND(@A_KALAN,2))
								END 
							FETCH NEXT FROM ALACAK INTO @A_LOGICALREF,@A_CARDREF,@A_DATE,@A_PROCDATE,@A_TRCODE,@A_TOTAL
								IF @@FETCH_STATUS = -1  -- Alacak Kaydİ bulunamazsa işlemi boş geçiyor
									BEGIN 
										INSERT INTO {DATABASE}..DY_BorcTakip (CLIENTREF,B_PAYPLANREF,B_VADE_TARIHI,B_GIRIS_TARIHI,B_TUTAR,K_PAYPLANREF,K_VADE_TARIHI,K_GIRIS_TARIHI,K_ISLEM_TUTAR)
										values(@B_CARDREF,@B_LOGICALREF,@B_DATE,@B_PROCDATE,ROUND(@B_KALAN,2),NULL,NULL,NULL,0)
									
										INSERT INTO {DATABASE}..DY_BorcTakip (CLIENTREF,B_PAYPLANREF,B_VADE_TARIHI,B_GIRIS_TARIHI,B_TUTAR,K_PAYPLANREF,K_VADE_TARIHI,K_GIRIS_TARIHI,K_ISLEM_TUTAR)
										SELECT CARDREF,	LOGICALREF,DATE_,PROCDATE ,TOTAL,null ,NULL ,null ,0  FROM {DATABASE}..DY_PAYTRANS WHERE CARDREF = @CLIENTREF AND SIGN = 0 AND CANCELLED =0 AND PAIDINCASH = 0 AND  CLOSINGRATE = 0 AND  PROCDATE BETWEEN @TARIH_1 AND @TARIH_2 AND  LOGICALREF NOT IN (SELECT B_PAYPLANREF  FROM {DATABASE}..DY_BorcTakip WHERE CLIENTREF =  @CLIENTREF)
											
										goto BITIR
										SET @A_KALAN = 0
									END 
								IF @@FETCH_STATUS = 0  -- Alacak Kaydy bulunamazsa i?lemi bo? geçiyor
									BEGIN 
										SET @A_KALAN = @A_TOTAL
									END
							GOTO TEKRAR
						END 
						IF @B_KALAN = 0 OR @B_KALAN < 0
							BEGIN 
								SET @B_KAPANAN = @B_KALAN + @A_KALAN 
								INSERT INTO {DATABASE}..DY_BorcTakip (CLIENTREF,B_PAYPLANREF,B_VADE_TARIHI,B_GIRIS_TARIHI,B_TUTAR,K_PAYPLANREF,K_VADE_TARIHI,K_GIRIS_TARIHI,K_ISLEM_TUTAR)
								values(@B_CARDREF,@B_LOGICALREF,@B_DATE,@B_PROCDATE,ROUND(@B_KAPANAN,2),@A_LOGICALREF,@A_DATE,@A_PROCDATE,ROUND(@B_KAPANAN,2))
								SET @A_KALAN  = @A_KALAN - @B_KAPANAN
								FETCH NEXT FROM Borc INTO @B_LOGICALREF,@B_CARDREF,@B_DATE,@B_PROCDATE,@B_TRCODE,@B_TOTAL
								IF @@FETCH_STATUS = -1  -- Alacak Kaydİ bulunamazsa işlemi boş geçiyor
									BEGIN 
										GOTO BITIR
									END 
								SET @B_KALAN = @B_TOTAL
								GOTO TEKRAR
							END
						END
BITIR:
CLOSE Borc
DEALLOCATE Borc
CLOSE ALACAK
DEALLOCATE ALACAK
FETCH NEXT FROM CariHesap INTO @CLIENTREF
END
CLOSE CariHesap
DEALLOCATE CariHesap

SELECT 
CLCARD.CODE [Cari Hesap Kodu],
CLCARD.DEFINITION_ [Cari Hesap],
CLCARD.SPECODE [Cari Özel Kod],
CLCARD.SPECODE2 [Cari Özel Kod 2],
CLCARD.SPECODE2 [Cari Özel Kod 3],
ISNULL(PYT_1.TRCODE ,CLF_1.TRCODE) [Fiş Tür No],
PYT_TUR_1.ACIKLAMA [Fiş Türü],
B_GIRIS_TARIHI  [İşlem Tarihi],
B_VADE_TARIHI	[Vade Tarihi],
BT.B_TUTAR		[Tutar], 
ISNULL(PYT_2.TRCODE ,CLF_2.TRCODE) [Kapatan Fiş Tür No],
PYT_TUR_2.ACIKLAMA [Kapatan Fiş Türü],


K_GIRIS_TARIHI  [Kapatan İşlem Tarihi],
K_VADE_TARIHI	[Kapatan Vade Tarihi],
CASE WHEN ISNULL(PYT_2.TRCODE ,CLF_2.TRCODE) is null then 0 else BT.B_TUTAR END		[Kapatan Tutar],

CASE WHEN K_VADE_TARIHI IS null THEN DATEDIFF(dd,B_VADE_TARIHI,GETDATE())  ELSE DATEDIFF(dd,B_VADE_TARIHI,K_VADE_TARIHI) END [Gün Fark]


FROM DY_BorcTakip BT
INNER JOIN LG_{FIRMA}_CLCARD CLCARD    ON BT.CLIENTREF = CLCARD.LOGICALREF 
LEFT JOIN LG_{FIRMA}_{DONEM}_PAYTRANS PYT_1 ON BT.B_PAYPLANREF = PYT_1.LOGICALREF +  900000000
LEFT JOIN LG_{FIRMA}_{DONEM}_CLFLINE  CLF_1 ON BT.B_PAYPLANREF = CLF_1.LOGICALREF +  800000000
LEFT JOIN LG_{FIRMA}_{DONEM}_PAYTRANS PYT_2 ON BT.K_PAYPLANREF = PYT_2.LOGICALREF +  900000000
LEFT JOIN LG_{FIRMA}_{DONEM}_CLFLINE  CLF_2 ON BT.K_PAYPLANREF = CLF_2.LOGICALREF +  800000000
LEFT JOIN DY_PAYTRANS_TUR PYT_TUR_1 ON (PYT_1.MODULENR = PYT_TUR_1.MODULENR AND PYT_1.TRCODE = PYT_TUR_1.TRCODE) OR (CLF_1.MODULENR = PYT_TUR_1.MODULENR AND CLF_1.TRCODE = PYT_TUR_1.TRCODE) 
LEFT JOIN DY_PAYTRANS_TUR PYT_TUR_2 ON (PYT_2.MODULENR = PYT_TUR_2.MODULENR AND PYT_2.TRCODE = PYT_TUR_2.TRCODE) OR (CLF_2.MODULENR = PYT_TUR_2.MODULENR AND CLF_2.TRCODE = PYT_TUR_2.TRCODE)


', 12001, 4000)

      SET @QUERY = @QUERY1 + @QUERY2 + @QUERY3 + @QUERY4 + @QUERY5 + @QUERY6 + @QUERY7 + @QUERY8 + @QUERY9 + @QUERY10 + @QUERY11 + @QUERY12 + @QUERY13 + @QUERY14 + @QUERY15 + @QUERY16 + @QUERY17 + @QUERY18 + @QUERY19 + @QUERY20
      SET @QUERY = REPLACE(REPLACE(REPLACE(@QUERY, '{DATABASE}',@DB), '{FIRMA}',@FIRM), '{DONEM}', @DONEM)

     EXECUTE sp_executesql @QUERY, @PARAMETRELER, @_RAPTAR = @_RAPTAR_VALUE;
END
GO
